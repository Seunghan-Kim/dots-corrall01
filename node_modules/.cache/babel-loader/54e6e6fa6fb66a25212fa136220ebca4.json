{"ast":null,"code":"var _jsxFileName = \"/Users/seunghankim/Documents/Dots/frontend/src/components/Todos.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, Flex, Input, InputGroup, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Stack, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodosContext = /*#__PURE__*/React.createContext({\n  todos: [],\n  fetchTodos: () => {}\n});\n\nfunction AddTodo() {\n  _s();\n\n  const [item, setItem] = React.useState(\"\");\n  const {\n    todos,\n    fetchTodos\n  } = React.useContext(TodosContext);\n\n  const handleInput = event => {\n    setItem(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    const newTodo = {\n      \"id\": todos.length + 1,\n      \"item\": item\n    };\n    fetch(\"http://localhost:8000/todo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTodo)\n    }).then(fetchTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(InputGroup, {\n      size: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        pr: \"4.5rem\",\n        type: \"text\",\n        placeholder: \"Add a todo item\",\n        \"aria-label\": \"Add a todo item\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTodo, \"2lTzVvsS3lS/9lRd6m8IeEE2PvU=\");\n\n_c = AddTodo;\nexport default function Todos() {\n  _s2();\n\n  const [todos, setTodos] = useState([]);\n\n  const fetchTodos = async () => {\n    const response = await fetch(\"http://localhost:8000/todo\");\n    const todos = await response.json();\n    setTodos(todos.data);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TodosContext.Provider, {\n    value: {\n      todos,\n      fetchTodos\n    },\n    children: [/*#__PURE__*/_jsxDEV(AddTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 5,\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"b\", {\n        children: todo.item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Todos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c2 = Todos;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddTodo\");\n$RefreshReg$(_c2, \"Todos\");","map":{"version":3,"sources":["/Users/seunghankim/Documents/Dots/frontend/src/components/Todos.jsx"],"names":["React","useEffect","useState","Box","Button","Flex","Input","InputGroup","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Stack","Text","useDisclosure","TodosContext","createContext","todos","fetchTodos","AddTodo","item","setItem","useContext","handleInput","event","target","value","handleSubmit","newTodo","length","fetch","method","headers","body","JSON","stringify","then","Todos","setTodos","response","json","data","map","todo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n    Box,\n    Button,\n    Flex,\n    Input,\n    InputGroup,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    Stack,\n    Text,\n    useDisclosure\n} from \"@chakra-ui/react\";\n\nconst TodosContext = React.createContext({\n  todos: [], fetchTodos: () => {}\n})\n\nfunction AddTodo() {\n  const [item, setItem] = React.useState(\"\")\n  const {todos, fetchTodos} = React.useContext(TodosContext)\n\n  const handleInput = event  => {\n    setItem(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    const newTodo = {\n      \"id\": todos.length + 1,\n      \"item\": item\n    }\n\n    fetch(\"http://localhost:8000/todo\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newTodo)\n    }).then(fetchTodos)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup size=\"md\">\n        <Input\n          pr=\"4.5rem\"\n          type=\"text\"\n          placeholder=\"Add a todo item\"\n          aria-label=\"Add a todo item\"\n          onChange={handleInput}\n        />\n      </InputGroup>\n    </form>\n  )\n}\n\nexport default function Todos() {\n  const [todos, setTodos] = useState([])\n  const fetchTodos = async () => {\n    const response = await fetch(\"http://localhost:8000/todo\")\n    const todos = await response.json()\n    setTodos(todos.data)\n  }\n  useEffect(() => {\n    fetchTodos()\n  }, [])\n  return (\n    <TodosContext.Provider value={{todos, fetchTodos}}>\n      <AddTodo />\n      <Stack spacing={5}>\n        {todos.map((todo) => (\n          <b>{todo.item}</b>\n        ))}\n      </Stack>\n    </TodosContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}