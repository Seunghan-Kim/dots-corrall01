{"ast":null,"code":"var _jsxFileName = \"/Users/seunghankim/Documents/Dots/frontend/src/components/Todos.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, Flex, Input, InputGroup, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Stack, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodosContext = /*#__PURE__*/React.createContext({\n  todos: [],\n  fetchTodos: () => {}\n});\n\nfunction AddTodo() {\n  _s();\n\n  const [item, setItem] = React.useState(\"\");\n  const {\n    todos,\n    fetchTodos\n  } = React.useContext(TodosContext);\n\n  const handleInput = event => {\n    setItem(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    const newTodo = {\n      \"id\": todos.length + 1,\n      \"item\": item\n    };\n    fetch(\"http://localhost:8000/todo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTodo)\n    }).then(fetchTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(InputGroup, {\n      size: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        pr: \"4.5rem\",\n        type: \"text\",\n        placeholder: \"Add a todo item\",\n        \"aria-label\": \"Add a todo item\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTodo, \"2lTzVvsS3lS/9lRd6m8IeEE2PvU=\");\n\n_c = AddTodo;\n\nfunction UpdateTodo({\n  item,\n  id\n}) {\n  _s2();\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [todo, setTodo] = useState(item);\n  const {\n    fetchTodos\n  } = React.useContext(TodosContext);\n\n  const updateTodo = async () => {\n    await fetch(`http://localhost:8000/todo/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        item: todo\n      })\n    });\n    onClose();\n    await fetchTodos();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      h: \"1.5rem\",\n      size: \"sm\",\n      onClick: onOpen,\n      children: \"Update Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Update Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            size: \"md\",\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              pr: \"4.5rem\",\n              type: \"text\",\n              placeholder: \"Add a todo item\",\n              \"aria-label\": \"Add a todo item\",\n              value: todo,\n              onChange: e => setTodo(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.5rem\",\n            size: \"sm\",\n            onClick: updateTodo,\n            children: \"Update Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(UpdateTodo, \"82qBQQgK5RKJ6kYqGJtPDaUyFpk=\", false, function () {\n  return [useDisclosure];\n});\n\n_c2 = UpdateTodo;\n\nfunction TodoHelper({\n  item,\n  id,\n  fetchTodos\n}) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 1,\n    shadow: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justify: \"space-between\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        mt: 4,\n        as: \"div\",\n        children: [item, /*#__PURE__*/_jsxDEV(Flex, {\n          align: \"end\",\n          children: /*#__PURE__*/_jsxDEV(UpdateTodo, {\n            item: item,\n            id: id,\n            fetchTodos: fetchTodos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = TodoHelper;\nexport default function Todos() {\n  _s3();\n\n  const [todos, setTodos] = useState([]);\n\n  const fetchTodos = async () => {\n    const response = await fetch(\"http://localhost:8000/todo\");\n    const todos = await response.json();\n    setTodos(todos.data);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TodosContext.Provider, {\n    value: {\n      todos,\n      fetchTodos\n    },\n    children: [/*#__PURE__*/_jsxDEV(AddTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 5,\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoHelper, {\n        item: todo.item,\n        id: todo.id,\n        fetchTodos: fetchTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Todos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c4 = Todos;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AddTodo\");\n$RefreshReg$(_c2, \"UpdateTodo\");\n$RefreshReg$(_c3, \"TodoHelper\");\n$RefreshReg$(_c4, \"Todos\");","map":{"version":3,"sources":["/Users/seunghankim/Documents/Dots/frontend/src/components/Todos.jsx"],"names":["React","useEffect","useState","Box","Button","Flex","Input","InputGroup","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Stack","Text","useDisclosure","TodosContext","createContext","todos","fetchTodos","AddTodo","item","setItem","useContext","handleInput","event","target","value","handleSubmit","newTodo","length","fetch","method","headers","body","JSON","stringify","then","UpdateTodo","id","isOpen","onOpen","onClose","todo","setTodo","updateTodo","e","TodoHelper","Todos","setTodos","response","json","data","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n    Box,\n    Button,\n    Flex,\n    Input,\n    InputGroup,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    Stack,\n    Text,\n    useDisclosure\n} from \"@chakra-ui/react\";\n\nconst TodosContext = React.createContext({\n  todos: [], fetchTodos: () => {}\n})\n\nfunction AddTodo() {\n  const [item, setItem] = React.useState(\"\")\n  const {todos, fetchTodos} = React.useContext(TodosContext)\n\n  const handleInput = event  => {\n    setItem(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    const newTodo = {\n      \"id\": todos.length + 1,\n      \"item\": item\n    }\n\n    fetch(\"http://localhost:8000/todo\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newTodo)\n    }).then(fetchTodos)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup size=\"md\">\n        <Input\n          pr=\"4.5rem\"\n          type=\"text\"\n          placeholder=\"Add a todo item\"\n          aria-label=\"Add a todo item\"\n          onChange={handleInput}\n        />\n      </InputGroup>\n    </form>\n  )\n}\n\nfunction UpdateTodo({item, id}) {\n  const {isOpen, onOpen, onClose} = useDisclosure()\n  const [todo, setTodo] = useState(item)\n  const {fetchTodos} = React.useContext(TodosContext)\n\n  const updateTodo = async () => {\n    await fetch(`http://localhost:8000/todo/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ item: todo })\n    })\n    onClose()\n    await fetchTodos()\n  }\n\n  return (\n    <>\n      <Button h=\"1.5rem\" size=\"sm\" onClick={onOpen}>Update Todo</Button>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay/>\n        <ModalContent>\n          <ModalHeader>Update Todo</ModalHeader>\n          <ModalCloseButton/>\n          <ModalBody>\n            <InputGroup size=\"md\">\n              <Input\n                pr=\"4.5rem\"\n                type=\"text\"\n                placeholder=\"Add a todo item\"\n                aria-label=\"Add a todo item\"\n                value={todo}\n                onChange={e => setTodo(e.target.value)}\n              />\n            </InputGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button h=\"1.5rem\" size=\"sm\" onClick={updateTodo}>Update Todo</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}\n\nfunction TodoHelper({item, id, fetchTodos}) {\n  return (\n    <Box p={1} shadow=\"sm\">\n      <Flex justify=\"space-between\">\n        <Text mt={4} as=\"div\">\n          {item}\n          <Flex align=\"end\">\n            <UpdateTodo item={item} id={id} fetchTodos={fetchTodos}/>\n          </Flex>\n        </Text>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default function Todos() {\n  const [todos, setTodos] = useState([])\n  const fetchTodos = async () => {\n    const response = await fetch(\"http://localhost:8000/todo\")\n    const todos = await response.json()\n    setTodos(todos.data)\n  }\n  useEffect(() => {\n    fetchTodos()\n  }, [])\n  return (\n    <TodosContext.Provider value={{todos, fetchTodos}}>\n      <AddTodo />\n      <Stack spacing={5}>\n        {todos.map((todo) => (\n          <TodoHelper item={todo.item} id={todo.id} fetchTodos={fetchTodos} />\n        ))}\n      </Stack>\n    </TodosContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}